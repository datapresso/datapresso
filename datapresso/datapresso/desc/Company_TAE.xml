<?xml version="1.0" encoding="UTF-8"?>
<taeDescription xmlns="http://uima.apache.org/resourceSpecifier">
  <frameworkImplementation>org.apache.uima.java</frameworkImplementation>
  <primitive>true</primitive>
  <annotatorImplementationName>com.dp.edgar.uima.annotator.EdgarRegExAnnotator</annotatorImplementationName>
  <analysisEngineMetaData>
    <name>Company Info Recognizer using Regular Expressions</name>
    <description>Detects company information  using regular expressions.</description>
    <version/>
    <vendor/>
    <configurationParameters searchStrategy="language_fallback">
      <configurationParameter>
        <name>Patterns</name>
        <description>Regular expression patterns to match.  The language is that supported by Java 1.4.</description>
        <type>String</type>
        <multiValued>true</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>TypeNames</name>
        <description>Names of CAS Types to create for the patterns found.  The indexes of this array
correspond to the indexes of the Patterns or PatternFiles arrays.  If a match is found for
Patterns[i], it will result in an annotation of type
TypeNames[i].</description>
        <type>String</type>
        <multiValued>true</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>ContainingAnnotationTypes</name>
        <description>Names of CAS Input Types within which annotations should be created.</description>
        <type>String</type>
        <multiValued>true</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>AnnotateEntireContainingAnnotation</name>
        <description>When the ContainingAnnoationTypes parameter is specified, a value of true for this
	parameter will cause the entire containing annotation to be used as the span of the new
	annotation, rather than just the span of the regular expression match.  This can be used
	to "classify" previously created annotations according to whether or not they contain
	text matching a regular expression.</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
    </configurationParameters>
    <configurationParameterSettings>
      <nameValuePair>
        <name>ContainingAnnotationTypes</name>
        <value>
          <array/>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>AnnotateEntireContainingAnnotation</name>
        <value>
          <boolean>true</boolean>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>TypeNames</name>
        <value>
          <array/>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>Patterns</name>
        <value>
          <array/>
        </value>
      </nameValuePair>
    </configurationParameterSettings>
    <typeSystemDescription>
      <imports>
        <import location="Compensation.xml"/>
        <import location="Company.xml"/>
      </imports>
    </typeSystemDescription>
    <typePriorities/>
    <fsIndexCollection/>
    <capabilities>
      <capability>
        <inputs>
          <type allAnnotatorFeatures="true">com.ibm.es.tt.DocumentMetaData</type>
          <type allAnnotatorFeatures="true">uima.tcas.DocumentAnnotation</type>
        </inputs>
        <outputs>
          <type allAnnotatorFeatures="true">com.dp.edgar.uima.type.Company</type>
          <type allAnnotatorFeatures="true">com.ibm.es.tt.DocumentMetaData</type>
          <type allAnnotatorFeatures="true">uima.tcas.DocumentAnnotation</type>
        </outputs>
        <languagesSupported>
          <language>en</language>
        </languagesSupported>
      </capability>
    </capabilities>
    <operationalProperties>
      <modifiesCas>true</modifiesCas>
      <multipleDeploymentAllowed>true</multipleDeploymentAllowed>
      <outputsNewCASes>false</outputsNewCASes>
    </operationalProperties>
  </analysisEngineMetaData>
  <externalResourceDependencies>
    <externalResourceDependency>
      <key>PatternFile</key>
      <description>An optional external file containing regular expressions to match. File format is as follows: - Lines starting with # or whitepsace are ignored - Lines starting with % indicate an annotation type. - All other lines are regular expressions. The languages is that supported by Java 1.4. If a regular expression is matched, it will be annotated with the last annotation type declared (the nearest preceding line starting with %).</description>
      <optional>true</optional>
    </externalResourceDependency>
  </externalResourceDependencies>
  <resourceManagerConfiguration>
    <externalResources>
      <externalResource>
        <name>CompanyPatterns</name>
        <description>File containing Regular Expressions for the CAS type example.GovernmentOfficial.</description>
        <fileResourceSpecifier>
          <fileUrl>file:/c:/workspace/datapresso/EdgarProcessor/resources/CompanyPatterns.dat</fileUrl>
        </fileResourceSpecifier>
      </externalResource>
    </externalResources>
    <externalResourceBindings>
      <externalResourceBinding>
        <key>PatternFile</key>
        <resourceName>CompanyPatterns</resourceName>
      </externalResourceBinding>
    </externalResourceBindings>
  </resourceManagerConfiguration>
</taeDescription>
